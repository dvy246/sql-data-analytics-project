
/***************************************************************************
 * Magnitude Analysis SQL Queries for DataWarehouseAnalytics
 *
 * Each query below performs aggregate analysis across dimensions and measures.
 * All queries are documented for clarity, reproducibility, and extensibility.
 * Includes totals and averages where applicable, as per professional standards.
 ***************************************************************************/

------------------------------------------------------------------------
-- 1. Total Customers by Country (descending order)
--    Calculates the number of unique customers in each country.
------------------------------------------------------------------------
SELECT 
    country,
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

------------------------------------------------------------------------
-- 2. Total Customers by Gender (descending order)
--    Calculates the number of unique customers for each gender.
------------------------------------------------------------------------
SELECT 
    gender,
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

------------------------------------------------------------------------
-- 3. Total Customers by Marital Status (descending order)
--    Calculates the number of unique customers for each marital status.
------------------------------------------------------------------------
SELECT 
    marital_status,
    COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY marital_status
ORDER BY total_customers DESC;

------------------------------------------------------------------------
-- 4. Total Products by Category (descending order)
--    Calculates the number of unique products within each category.
------------------------------------------------------------------------
SELECT 
    category,
    COUNT(DISTINCT product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

------------------------------------------------------------------------
-- 5. Total Product Cost by Category (descending order)
--    Sums the total cost for all products within each category.
------------------------------------------------------------------------
SELECT  
    category,
    SUM(cost) AS total_cost 
FROM gold.dim_products 
GROUP BY category
ORDER BY total_cost DESC;

------------------------------------------------------------------------
-- 6. Total Product Cost by Subcategory (descending order)
--    Sums the total cost for all products within each subcategory.
------------------------------------------------------------------------
SELECT 
    subcategory,
    SUM(cost) AS total_cost 
FROM gold.dim_products 
GROUP BY subcategory
ORDER BY total_cost DESC;

------------------------------------------------------------------------
-- 7. Average Product Cost by Category (descending order)
--    Calculates the average cost for products in each category.
------------------------------------------------------------------------
SELECT
    category,
    AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC;

------------------------------------------------------------------------
-- 8. Average Product Cost by Subcategory (descending order)
--    Calculates the average cost for products in each subcategory.
------------------------------------------------------------------------
SELECT
    subcategory,
    AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY subcategory
ORDER BY avg_cost DESC;

------------------------------------------------------------------------
-- 9. Total Revenue by Product Category (descending order)
--    Calculates the total revenue generated from each product category.
------------------------------------------------------------------------
SELECT 
    s.category,
    SUM(p.sales_amount) AS total_revenue
FROM gold.fact_sales AS p
LEFT JOIN gold.dim_products AS s
    ON p.product_key = s.product_key
GROUP BY s.category
ORDER BY total_revenue DESC;

------------------------------------------------------------------------
-- 10. Average Revenue by Product Category (descending order)
--     Calculates the average revenue generated from each product category.
------------------------------------------------------------------------
SELECT 
    s.category,
    AVG(p.sales_amount) AS avg_revenue
FROM gold.fact_sales AS p
LEFT JOIN gold.dim_products AS s
    ON p.product_key = s.product_key
GROUP BY s.category
ORDER BY avg_revenue DESC;

------------------------------------------------------------------------
-- 11. Total Revenue by Customer (descending order)
--     Calculates the total revenue generated by each customer (with full name).
------------------------------------------------------------------------
SELECT 
    c.customer_key,
    CONCAT(c.first_name, ' ', c.last_name) AS full_name,
    SUM(s.sales_amount) AS total_revenue_per_customer
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue_per_customer DESC;

------------------------------------------------------------------------
-- 12. Average Revenue by Customer (descending order)
--     Calculates the average revenue per transaction for each customer.
------------------------------------------------------------------------
SELECT 
    c.customer_key,
    CONCAT(c.first_name, ' ', c.last_name) AS full_name,
    AVG(s.sales_amount) AS avg_revenue_per_customer
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY avg_revenue_per_customer DESC;

------------------------------------------------------------------------
-- 13. Total Revenue by Country (descending order)
--     Calculates the total revenue generated by customers in each country.
------------------------------------------------------------------------
SELECT 
    c.country,
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_sales DESC;

------------------------------------------------------------------------
-- 14. Average Revenue by Country (descending order)
--     Calculates the average revenue per transaction for customers in each country.
------------------------------------------------------------------------
SELECT 
    c.country,
    AVG(s.sales_amount) AS avg_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY avg_sales DESC;

------------------------------------------------------------------------
-- 15. Total Revenue by Gender (descending order)
--     Calculates the total revenue generated from each gender.
------------------------------------------------------------------------
SELECT 
    c.gender,
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.gender
ORDER BY total_sales DESC;

------------------------------------------------------------------------
-- 16. Average Revenue by Gender (descending order)
--     Calculates the average revenue per transaction for each gender.
------------------------------------------------------------------------
SELECT 
    c.gender,
    AVG(s.sales_amount) AS avg_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.gender
ORDER BY avg_sales DESC;

------------------------------------------------------------------------
-- 17. Total Revenue by Marital Status and Gender (descending order)
--     Calculates the total revenue by marital status and gender.
------------------------------------------------------------------------
SELECT 
    c.marital_status,
    c.gender, 
    SUM(s.sales_amount) AS total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.marital_status, c.gender
ORDER BY total_sales DESC;

------------------------------------------------------------------------
-- 18. Average Revenue by Marital Status and Gender (descending order)
--     Calculates the average revenue per transaction by marital status and gender.
------------------------------------------------------------------------
SELECT 
    c.marital_status,
    c.gender, 
    AVG(s.sales_amount) AS avg_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
    ON s.customer_key = c.customer_key
GROUP BY c.marital_status, c.gender
ORDER BY avg_sales DESC;

------------------------------------------------------------------------
-- 19. Total Revenue per Order (descending order)
--     Calculates the total revenue obtained from each order.
------------------------------------------------------------------------
SELECT 
    order_number,
    SUM(sales_amount) AS total_revenue_per_order
FROM gold.fact_sales
GROUP BY order_number
ORDER BY total_revenue_per_order DESC;

------------------------------------------------------------------------
-- 20. Average Revenue per Order (descending order)
--     Calculates the average revenue per transaction/order.
------------------------------------------------------------------------
SELECT 
    order_number,
    AVG(sales_amount) AS avg_revenue_per_order
FROM gold.fact_sales
GROUP BY order_number
ORDER BY avg_revenue_per_order DESC;
